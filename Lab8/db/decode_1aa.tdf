--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=13 LPM_WIDTH=4 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_1aa
( 
	data[3..0]	:	input;
	eq[12..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[12..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode451w[3..0]	: WIRE;
	w_anode468w[3..0]	: WIRE;
	w_anode478w[3..0]	: WIRE;
	w_anode488w[3..0]	: WIRE;
	w_anode498w[3..0]	: WIRE;
	w_anode508w[3..0]	: WIRE;
	w_anode518w[3..0]	: WIRE;
	w_anode528w[3..0]	: WIRE;
	w_anode538w[3..0]	: WIRE;
	w_anode549w[3..0]	: WIRE;
	w_anode559w[3..0]	: WIRE;
	w_anode569w[3..0]	: WIRE;
	w_anode579w[3..0]	: WIRE;
	w_anode589w[3..0]	: WIRE;
	w_anode599w[3..0]	: WIRE;
	w_anode609w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[4..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode528w[3..3], w_anode518w[3..3], w_anode508w[3..3], w_anode498w[3..3], w_anode488w[3..3], w_anode478w[3..3], w_anode468w[3..3], w_anode451w[3..3]);
	eq_wire2w[] = ( w_anode609w[3..3], w_anode599w[3..3], w_anode589w[3..3], w_anode579w[3..3], w_anode569w[3..3], w_anode559w[3..3], w_anode549w[3..3], w_anode538w[3..3]);
	w_anode451w[] = ( (w_anode451w[2..2] & (! data_wire[2..2])), (w_anode451w[1..1] & (! data_wire[1..1])), (w_anode451w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode468w[] = ( (w_anode468w[2..2] & (! data_wire[2..2])), (w_anode468w[1..1] & (! data_wire[1..1])), (w_anode468w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode478w[] = ( (w_anode478w[2..2] & (! data_wire[2..2])), (w_anode478w[1..1] & data_wire[1..1]), (w_anode478w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode488w[] = ( (w_anode488w[2..2] & (! data_wire[2..2])), (w_anode488w[1..1] & data_wire[1..1]), (w_anode488w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode498w[] = ( (w_anode498w[2..2] & data_wire[2..2]), (w_anode498w[1..1] & (! data_wire[1..1])), (w_anode498w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode508w[] = ( (w_anode508w[2..2] & data_wire[2..2]), (w_anode508w[1..1] & (! data_wire[1..1])), (w_anode508w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode518w[] = ( (w_anode518w[2..2] & data_wire[2..2]), (w_anode518w[1..1] & data_wire[1..1]), (w_anode518w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode528w[] = ( (w_anode528w[2..2] & data_wire[2..2]), (w_anode528w[1..1] & data_wire[1..1]), (w_anode528w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode538w[] = ( (w_anode538w[2..2] & (! data_wire[2..2])), (w_anode538w[1..1] & (! data_wire[1..1])), (w_anode538w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode549w[] = ( (w_anode549w[2..2] & (! data_wire[2..2])), (w_anode549w[1..1] & (! data_wire[1..1])), (w_anode549w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode559w[] = ( (w_anode559w[2..2] & (! data_wire[2..2])), (w_anode559w[1..1] & data_wire[1..1]), (w_anode559w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode569w[] = ( (w_anode569w[2..2] & (! data_wire[2..2])), (w_anode569w[1..1] & data_wire[1..1]), (w_anode569w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode579w[] = ( (w_anode579w[2..2] & data_wire[2..2]), (w_anode579w[1..1] & (! data_wire[1..1])), (w_anode579w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode589w[] = ( (w_anode589w[2..2] & data_wire[2..2]), (w_anode589w[1..1] & (! data_wire[1..1])), (w_anode589w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode599w[] = ( (w_anode599w[2..2] & data_wire[2..2]), (w_anode599w[1..1] & data_wire[1..1]), (w_anode599w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode609w[] = ( (w_anode609w[2..2] & data_wire[2..2]), (w_anode609w[1..1] & data_wire[1..1]), (w_anode609w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
